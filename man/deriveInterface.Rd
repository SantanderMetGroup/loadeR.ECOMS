% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deriveInterface.R
\name{deriveInterface}
\alias{deriveInterface}
\title{Identification of interface for derived variables}
\usage{
deriveInterface(dataset, var, dictionary, time)
}
\arguments{
\item{dataset}{character string indicating the dataset. See details.}

\item{var}{character string defining the target variable. See details.}

\item{dictionary}{Logical indicating if a dictionary is used.}
}
\value{
A list of length two:
\begin{itemize}
\item{deriveInterface}{Either a character string indicating the interface to derive the variable,
 or NULL if the variable is not derived}
\item{leadVar}{First variable that will be loaded and whose subsetting parameters
and metadata will be used as reference for the derived variable. See details.}
\item{origVar}{Name of the variable requested. In case of applying an approximation function,
this is the requested variable}
\end{itemize}
}
\description{
Determines whether a variable is derived or not and returns the interface name
 if applicable, building on the information retrieved from the dictionary.
 This is a subroutine of \code{\link{loadECOMS}}
}
\details{
Currently in ECOMS there is only a reduced set of derived variables,
corresponding to the S4-seasonal-15-member model, all at surface level, but the
 function is intended to handle other eventualities (derived 3D vars and/or
 derived variables from other datasets/models). The underlying idea of the function is
 first arbitrarily loading one of the input variables (the \code{leadVar}), whose
 geolocation and time subsetting definition are used subsequently for all other input
 variables. For instance, if one needs the \sQuote(original var) surface wind speed (\code{"wss"}),
 the first variable being loaded (i.e., the \sQuote{leading var}) is the eastward 
 wind component (\code{"uas"}), and then all parameters are passed to the subsequent
 functions for subsetting and are recicled for loading also the northward component \code{"vas"}
  needed to compute the velocity module.
}
\author{
J Bedia
}
\keyword{internal}
